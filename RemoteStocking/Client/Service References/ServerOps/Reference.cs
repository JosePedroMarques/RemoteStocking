//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServerOps {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerOps.IServerOps")]
    public interface IServerOps {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/GetEmailTransaction", ReplyAction="http://tempuri.org/IServerOps/GetEmailTransactionResponse")]
        string GetEmailTransaction(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/AddStock", ReplyAction="http://tempuri.org/IServerOps/AddStockResponse")]
        string AddStock(Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/IsExecuted", ReplyAction="http://tempuri.org/IServerOps/IsExecutedResponse")]
        bool IsExecuted(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/ChangeStockRate", ReplyAction="http://tempuri.org/IServerOps/ChangeStockRateResponse")]
        string ChangeStockRate(string id, double rate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/GetAllWaitingStock", ReplyAction="http://tempuri.org/IServerOps/GetAllWaitingStockResponse")]
        Stock[] GetAllWaitingStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/GetAllStocksByClient", ReplyAction="http://tempuri.org/IServerOps/GetAllStocksByClientResponse")]
        Stock[] GetAllStocksByClient(int IDClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerOps/GetAllSharesType", ReplyAction="http://tempuri.org/IServerOps/GetAllSharesTypeResponse")]
        string[] GetAllSharesType();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerOpsChannel : Client.ServerOps.IServerOps, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerOpsClient : System.ServiceModel.ClientBase<Client.ServerOps.IServerOps>, Client.ServerOps.IServerOps {
        
        public ServerOpsClient() {
        }
        
        public ServerOpsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServerOpsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerOpsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServerOpsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetEmailTransaction(string id) {
            return base.Channel.GetEmailTransaction(id);
        }
        
        public string AddStock(Stock stock) {
            return base.Channel.AddStock(stock);
        }
        
        public bool IsExecuted(string id) {
            return base.Channel.IsExecuted(id);
        }
        
        public string ChangeStockRate(string id, double rate) {
            return base.Channel.ChangeStockRate(id, rate);
        }
        
        public Stock[] GetAllWaitingStock() {
            return base.Channel.GetAllWaitingStock();
        }
        
        public Stock[] GetAllStocksByClient(int IDClient) {
            return base.Channel.GetAllStocksByClient(IDClient);
        }
        
        public string[] GetAllSharesType() {
            return base.Channel.GetAllSharesType();
        }
    }
}
